###
#	.gitconfig  3.249.479  2019-08-11T16:32:06.852588-05:00 (CDT)  https://github.com/BradleyA/user-files.git  uadmin  one-rpi3b.cptx86.com 3.248-2-gaf22544  
#	   .gitconfig added [color "status"] for git status command 
#	.gitconfig  3.124.179  2019-02-18T22:02:59.572482-06:00 (CST)  https://github.com/BradleyA/user-work-files.git  uadmin  one-rpi3b.cptx86.com 3.123-6-g4e29bf8  
#	   sync with tested version with bitbucket gitlab oush and pull 
#	.gitconfig  3.105.147  2018-11-15T16:35:41.718465-06:00 (CST)  https://github.com/BradleyA/user-work-files.git  uthree  three.cptx86.com 3.104  
#	   added where git alias 
#	.gitconfig  3.85.125  2018-10-23T22:39:18.725692-05:00 (CDT)  https://github.com/BradleyA/user-work-files.git  uadmin  one-rpi3b.cptx86.com 3.84  
#	   added comment about repository name 
#	.gitconfig  1.3.23  2018-07-24_21:24:30_CDT  https://github.com/BradleyA/user-work-files.git  uadmin  three-rpi3b.cptx86.com 1.2  
#	   added notes for GitLab and Bitbucket 
#
[user]
        name = Bradley Allen	# GitHub
#	name = BradleyAxe	# GitLab
	email = allen.bradley@ymail.com
[core]
        editor = vi
[push]
        default = simple
[credential]
	helper = cache --timeout=1800
#	GitHub
#		Change your remote's URL to SSH with the git remote set-url command.
#		git remote origin https://github.com/BradleyA/markit 
#		git remote set-url https://github.com/BradleyA/markit 
#		git remote set-url https://github.com/BradleyA/<REPOSITORY> 
#		git remote set-url origin git@github.com:BradleyA/<REPOSITORY>.git
        username = BradleyA
#	username = cptx86
#	GitLab
#		git config --list
#		git config --global user.name BradleyAxe
#		git remote set-url origin https://gitlab.com/BradleyAxe/markit.git
#		git remote set-url origin git@gitlab.com:BradleyAxe/<REPOSITORY>.git
#		git remote set-url origin git@gitlab.com:BradleyAxe/markit.git
#	username = BradleyAxe
#	Bitbucket
#		git remote set-url origin git@bitbucket.org:<USERNAME>/<repository>.git
#	username = axebbq
#	username = cptx86
[alias]
	# git changed
	changed = show --pretty=\"format:\" --name-only
	# git what
	what = log --graph --decorate --oneline --color --stat
	# git where
	where = "!sh -c 'git log --graph --decorate --color --stat --grep=\"$1\"' -"
[color]
        ui = true
[color "status"]
#	header = "yellow normal dim"
#	added = magenta
#	added = "green normal bold"
	changed = "yellow normal bold"
	untracked = cyan
	branch = "red normal bold"
	nobranch = "red white bold"
###
